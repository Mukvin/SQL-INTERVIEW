题目描述

film表
 
字段 			|	说明
film_id 		|	电影id
title 			|	电影名称
description 	|	电影描述信息 


    CREATE TABLE IF NOT EXISTS film (
    film_id smallint(5)  NOT NULL DEFAULT '0',
    title varchar(255) NOT NULL,
    description text,
    PRIMARY KEY (film_id));

	
category表 

字段 				|		说明
category_id 		|		电影分类id
name 				|		电影分类名称
last_update 		|		电影分类最后更新时间 


    CREATE TABLE category  (
    category_id  tinyint(3)  NOT NULL ,
    name  varchar(25) NOT NULL, `last_update` timestamp,
    PRIMARY KEY ( category_id ));
	

film_category表 

字段 				|		说明
film_id 			|		电影id
category_id 		|		电影分类id
last_update 		|		电影id和分类id对应关系的最后更新时间 


    CREATE TABLE film_category  (
    film_id  smallint(5)  NOT NULL,
    category_id  tinyint(3)  NOT NULL, `last_update` timestamp);
	
	
 使用子查询的方式找出属于Action分类的所有电影对应的title,description 
 
 解析：

根据题意，最简单粗暴的解法是直接 FROM 三张表查询，且用 WHERE 并列三个限定条件：
1、三个限定条件分别是【f.film_id = fc.film_id】、【fc.category_id = c.category_id 】、【c.name = 'Action'】  

答案：

SELECT f.title, f.description 
FROM film f, film_category fc, category c
WHERE f.film_id = fc.film_id 
AND fc.category_id = c.category_id 
AND c.name = 'Action'